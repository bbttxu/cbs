/ _shop.html.slim
- has_open_sessions = false
- shop.sessions.each do |session|
	- has_open_sessions = true if session and session.ends_at == nil
.row
	- if notice
		.twelve.columns
			.alert-box
				p#notice= notice

	.columns.four.push-eight
		= render :partial => "sessions/login", :locals => { :this_shop => shop }


	.columns.eight.pull-four

		h3
			= link_to shop.shop_date, shop
		p
			b= "Location: "
			= shop.location
		.admin
			ul
				li= link_to 'Edit', edit_shop_path(shop)


		h4
			= "#{pluralize(shop.sessions.count, 'volunteer')}, "
			= "#{pluralize(number_with_precision(shop.sessions.collect{|x| x.hours_worked}.inject{|sum,x| sum + x }, :precision => 2), 'hour')} worked"
		- if shop.sessions.count > 0
			table( width="100%" )
				tr
					th Volunteer
					th Start
					th End
					th Work time
					th Actions
				- shop.sessions.each do |sesh|
					tr
						td= sesh.is_volunteer ? "yes" : "no"

						td
							= link_to sesh.volunteer.name, sesh.volunteer
						td= Time.at(sesh.starts_at).strftime("%I:%M")
						td
						- if sesh.ends_at.nil?
							td= "started #{time_ago_in_words sesh.starts_at} ago"
							= Time.zone.at(sesh.ends_at).strftime("%I:%M") if sesh.ends_at
						- else
							td
								= pluralize(number_with_precision( sesh.hours_worked, :precision => 1 ), 'hour' )
						td
							= link_to 'modify', edit_session_path(sesh), :class => "small radius secondary button"
						- if sesh.ends_at.nil?
								td
									= form_for sesh do |sess|
										= sess.hidden_field :starts_at, :value => sesh.starts_at
										= sess.hidden_field :ends_at, :value => "now"
										= submit_tag "logout", :class => "small radius alert button"

		- if has_open_sessions
			p
				= link_to 'Close shop', "/shops/#{shop.id}/close", :class =>  "button alert"
			p Closing the shop will log out the active volunteers and set the end time to the current time

			hr
